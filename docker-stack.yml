version: '3.3'
services:
  elasticsearch:
    image: elasticsearch:6.8.20
    container_name: elasticsearch
    hostname: elasticsearch
    volumes:
      # define folder to store elasticsearch data in container
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      - cluster.name=docker_cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 3
  
  kibana:
    image: kibana:6.8.20
    container_name: kibana
    hostname: kibana
    ports:
      - "5601:5601"
    links:
     - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    networks:
     - elk
    deploy:
      mode: replicated
      replicas: 1
  
  logstash:
    image: logstash:6.8.20
    container_name: logstash
    hostname: logstash
    volumes:
      # bind logstash configuration file
      - type: bind
        source: ./logstash/pipeline/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
      # bind folder containing input files for logstash
      - type: bind
        source: ./logstash/input
        target: /usr/share/logstash/input
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    ports:
      - "9600:9600"
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
  
  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    hostname: jupyter
    volumes:
      # bind notebooks to container
      - type: bind
        source: ./jupyter/notebooks
        target: /home/jovyan
    # removing login credentials is unsafe, use only for testing purposes
    command: jupyter notebook --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - "8888:8888"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

networks:
  elk:
    driver: overlay

volumes:
  elasticsearch: